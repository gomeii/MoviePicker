{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gomez\\\\OneDrive\\\\Documents\\\\VS_Repositories\\\\MoviePicker\\\\src\\\\SearchBar.js\",\n  _s = $RefreshSig$();\n// This will be the component for the search bar\n// \nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  onSearch\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleSearch = () => {\n    // Call the onSearch prop with the current search term\n    onSearch(searchTerm);\n  };\n  const handleKeyPress = event => {\n    // Trigger search if Enter key is pressed\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: searchTerm,\n      onChange: handleInputChange,\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n_s(SearchBar, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchBar","onSearch","_s","searchTerm","setSearchTerm","handleInputChange","event","target","value","handleSearch","handleKeyPress","key","children","type","placeholder","onChange","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gomez/OneDrive/Documents/VS_Repositories/MoviePicker/src/SearchBar.js"],"sourcesContent":["// This will be the component for the search bar\r\n// \r\nimport React, { useState } from 'react';\r\n\r\nconst SearchBar = ({ onSearch }) => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n  \r\n    const handleInputChange = (event) => {\r\n      setSearchTerm(event.target.value);\r\n    };\r\n  \r\n    const handleSearch = () => {\r\n      // Call the onSearch prop with the current search term\r\n      onSearch(searchTerm);\r\n    };\r\n  \r\n    const handleKeyPress = (event) => {\r\n      // Trigger search if Enter key is pressed\r\n      if (event.key === 'Enter') {\r\n        handleSearch();\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={searchTerm}\r\n          onChange={handleInputChange}\r\n          onKeyPress={handleKeyPress}\r\n        />\r\n        <button onClick={handleSearch}>Search</button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default SearchBar;"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMQ,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAR,QAAQ,CAACE,UAAU,CAAC;EACtB,CAAC;EAED,MAAMO,cAAc,GAAIJ,KAAK,IAAK;IAChC;IACA,IAAIA,KAAK,CAACK,GAAG,KAAK,OAAO,EAAE;MACzBF,YAAY,CAAC,CAAC;IAChB;EACF,CAAC;EAED,oBACEV,OAAA;IAAAa,QAAA,gBACEb,OAAA;MACEc,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAW;MACvBN,KAAK,EAAEL,UAAW;MAClBY,QAAQ,EAAEV,iBAAkB;MAC5BW,UAAU,EAAEN;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFrB,OAAA;MAAQsB,OAAO,EAAEZ,YAAa;MAAAG,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/BEF,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAiCb,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}