{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gomez\\\\OneDrive\\\\Documents\\\\VS_Repositories\\\\MoviePicker\\\\MoviePicker\\\\src\\\\components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\n// This will be the component for the search bar\n// \nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  onSearch\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState();\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value);\n    console.log(event.target.value);\n  };\n  const handleSearch = async () => {\n    // Call the onSearch prop with the current search term\n    try {\n      const response = await fetch(`http://www.omdbapi.com/?s=${searchTerm}`);\n      // Assuming the API response contains an array of movies\n      setMovies(response.data.results);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n    // onSearch(searchTerm);\n  };\n\n  const handleKeyPress = event => {\n    // Trigger search if Enter key is pressed\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: searchTerm,\n      onChange: handleInputChange,\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n_s(SearchBar, \"XpAc1lSU3QwM3QI5mhu1rYvuFJQ=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchBar","onSearch","_s","searchTerm","setSearchTerm","handleInputChange","event","target","value","console","log","handleSearch","response","fetch","setMovies","data","results","error","handleKeyPress","key","children","type","placeholder","onChange","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gomez/OneDrive/Documents/VS_Repositories/MoviePicker/MoviePicker/src/components/SearchBar.js"],"sourcesContent":["// This will be the component for the search bar\r\n// \r\nimport React, { useState } from 'react';\r\n\r\nconst SearchBar = ({ onSearch }) => {\r\n    const [searchTerm, setSearchTerm] = useState();\r\n  \r\n    const handleInputChange = (event) => {\r\n      setSearchTerm(event.target.value);\r\n      console.log(event.target.value);\r\n    };\r\n  \r\n    const handleSearch = async () => {\r\n      // Call the onSearch prop with the current search term\r\n      try {\r\n        const response = await fetch(`http://www.omdbapi.com/?s=${searchTerm}`);\r\n        // Assuming the API response contains an array of movies\r\n        setMovies(response.data.results);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n      // onSearch(searchTerm);\r\n    };\r\n  \r\n    const handleKeyPress = (event) => {\r\n      // Trigger search if Enter key is pressed\r\n      if (event.key === 'Enter') {\r\n        handleSearch();\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={searchTerm}\r\n          onChange={handleInputChange}\r\n          onKeyPress={handleKeyPress}\r\n        />\r\n        <button onClick={handleSearch}>Search</button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default SearchBar;"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAE9C,MAAMQ,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACjCC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAA4BV,UAAW,EAAC,CAAC;MACvE;MACAW,SAAS,CAACF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;IACA;EACF,CAAC;;EAED,MAAMC,cAAc,GAAIZ,KAAK,IAAK;IAChC;IACA,IAAIA,KAAK,CAACa,GAAG,KAAK,OAAO,EAAE;MACzBR,YAAY,CAAC,CAAC;IAChB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAW;MACvBd,KAAK,EAAEL,UAAW;MAClBoB,QAAQ,EAAElB,iBAAkB;MAC5BmB,UAAU,EAAEN;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF7B,OAAA;MAAQ8B,OAAO,EAAElB,YAAa;MAAAS,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAvCEF,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAyCb,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}