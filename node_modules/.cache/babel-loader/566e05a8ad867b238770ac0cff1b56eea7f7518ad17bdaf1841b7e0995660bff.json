{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gomez\\\\OneDrive\\\\Documents\\\\VS_Repositories\\\\MoviePicker\\\\FrontEnd\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// src/components/LoginPage.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, Button, Container, Row, Col, Card } from 'react-bootstrap';\nimport MyNavbar from './MyNavbar';\n\n// import axios from 'axios';\nimport './styling/LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginPage = ({\n  isAuthenticated,\n  setIsAuthenticated\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoginMode, setIsLoginMode] = useState(true); // Determine if it's login or create user mode\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const userData = {\n      username: username,\n      password: password\n    };\n\n    // Determine the API endpoint based on the mode\n    const endpoint = isLoginMode ? '/api/auth/login' : '/api/users/create';\n    try {\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        console.log('User authenticated successfully:', result);\n        setIsAuthenticated(true);\n        navigate('/');\n      } else {\n        console.error('Error authenticating user:', result.message);\n      }\n    } catch (error) {\n      console.error('Error authenticating user:', error);\n    }\n\n    // Clear the form fields after submission\n    setUsername('');\n    setPassword('');\n  };\n  const toggleMode = () => {\n    setIsLoginMode(!isLoginMode);\n\n    // Clear the form fields when switching modes\n    setUsername('');\n    setPassword('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MyNavbar, {\n      isAuthenticated: isAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex justify-content-center align-items-center min-vh-100\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"w-100\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            span: 6,\n            offset: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                className: \"text-center mb-4\",\n                children: isLoginMode ? 'Login' : 'Sign Up'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formUsername\",\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Username\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Enter username\",\n                    value: username,\n                    onChange: e => setUsername(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formPassword\",\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    placeholder: \"Enter password\",\n                    value: password,\n                    onChange: e => setPassword(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  className: \"w-100\",\n                  children: isLoginMode ? 'Login' : 'Sign Up'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                className: \"w-100 mt-3\",\n                onClick: toggleMode,\n                children: isLoginMode ? 'Create an account' : 'Already have an account? Login'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LoginPage, \"IO9yTpuu6+wx38bE7HldRX+r0MQ=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Form","Button","Container","Row","Col","Card","MyNavbar","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","isAuthenticated","setIsAuthenticated","_s","navigate","username","setUsername","password","setPassword","isLoginMode","setIsLoginMode","handleSubmit","event","preventDefault","userData","endpoint","response","fetch","method","headers","body","JSON","stringify","result","json","ok","console","log","error","message","toggleMode","children","fileName","_jsxFileName","lineNumber","columnNumber","className","md","span","offset","Body","Title","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","required","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gomez/OneDrive/Documents/VS_Repositories/MoviePicker/FrontEnd/src/components/LoginPage.js"],"sourcesContent":["// src/components/LoginPage.js\r\n\r\nimport React, {useState} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { Form, Button, Container, Row, Col, Card } from 'react-bootstrap';\r\nimport MyNavbar from './MyNavbar';\r\n\r\n// import axios from 'axios';\r\nimport './styling/LoginPage.css'\r\n\r\nconst LoginPage = ({ isAuthenticated, setIsAuthenticated }) => {\r\n  \r\n    const navigate = useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoginMode, setIsLoginMode] = useState(true); // Determine if it's login or create user mode\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const userData = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    // Determine the API endpoint based on the mode\r\n    const endpoint = isLoginMode ? '/api/auth/login' : '/api/users/create';\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        console.log('User authenticated successfully:', result);\r\n        setIsAuthenticated(true);\r\n        navigate('/');\r\n      } else {\r\n        console.error('Error authenticating user:', result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error authenticating user:', error);\r\n    }\r\n\r\n    // Clear the form fields after submission\r\n    setUsername('');\r\n    setPassword('');\r\n  };\r\n\r\n  const toggleMode = () => {\r\n    setIsLoginMode(!isLoginMode);\r\n\r\n    // Clear the form fields when switching modes\r\n    setUsername('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <MyNavbar isAuthenticated={isAuthenticated}/>\r\n      <Container className=\"d-flex justify-content-center align-items-center min-vh-100\">\r\n        <Row className=\"w-100\">\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title className=\"text-center mb-4\">\r\n                  {isLoginMode ? 'Login' : 'Sign Up'}\r\n                </Card.Title>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Form.Group controlId=\"formUsername\" className='mb-3'>\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter username\"\r\n                      value={username}\r\n                      onChange={(e) => setUsername(e.target.value)}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formPassword\" className='mb-3'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Enter password\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                    {isLoginMode ? 'Login' : 'Sign Up'}\r\n                  </Button>\r\n                </Form>\r\n                <Button\r\n                  variant=\"link\"\r\n                  className=\"w-100 mt-3\"\r\n                  onClick={toggleMode}\r\n                >\r\n                  {isLoginMode ? 'Create an account' : 'Already have an account? Login'}\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}